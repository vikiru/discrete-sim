{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Discrete Simulation Project <p> Setup     \u2022     Code     \u2022     Usage </p>"},{"location":"#project-description","title":"\ud83d\udcdd Project Description","text":"The manufacturing facility produces different products (P1, P2, P3) using different combinations of raw components (C1, C2, C3). The components are cleaned and repaired by two inspectors before being sent to workstations (W1, W2, W3) that have buffers for storing them. The inspectors may get blocked if the buffers are full. The workstations start assembling products when they have all the required components. Inspector 1 sends component C1 to the workstation with the shortest queue, while Inspector 2 sends components C2 and C3 randomly. To produce the three products, the following combinations of components are used: P1 is made from C1, P2 is made from C1 and C2, and P3 is made from C1 and C3.  <p> This repository showcases my term project for SYSC4005, in which I developed a discrete simulation model of a manufacturing facility based on the given problem statement. The purpose of this simulation study was to identify and evaluate an alternative operating policy that could enhance the system performance. </p>"},{"location":"#project-author","title":"\ud83d\udc65 Project Author","text":"<p>This project was completed individually by Visakan Kirubakaran.</p>"},{"location":"license/","title":"Acknowledgements & License","text":""},{"location":"license/#acknowledgements-and-license","title":"Acknowledgements and License","text":""},{"location":"license/#acknowledgements","title":"\u2728 Acknowledgements","text":"<ul> <li>NumPy for generating random values based on an exponential distribution</li> <li>SciPy for statistical functions</li> <li>SimPy to simulate the manufacturing facility</li> <li>MkDocs to generate documentation from Markdown files</li> <li>Material for MKDocs as the theme for MkDocs website</li> <li>GitHub Pages to host the documentation website</li> <li>Shields Badges for repository badges</li> </ul>"},{"location":"license/#license","title":"\u00a9\ufe0f License","text":"<p>The contents of this repository are licensed under the terms and conditions of the MIT license.</p> <p>MIT \u00a9 2023-present Visakan Kirubakaran.</p>"},{"location":"results/","title":"Understanding the Results","text":""},{"location":"results/#understanding-the-results","title":"Understanding the Results","text":""},{"location":"results/#folder-descriptions","title":"Folder Descriptions","text":"<p> The data folder contains the input data that is required for the simulation of the manufacturing facility. This data includes the servicing times of the inspectors who check the quality of the components, and the processing times of the workstations that assemble the components into products.  </p> <p> The policy comparison folder contains a text files that compare the performance of the original policy and the four alternative policies that were proposed to improve the efficiency of the facility. Each policy was simulated for a time period of t = 50000 units, which represents the duration of the production cycle.  </p> <p> The results folder contains sub-folders for each policy, where the simulation results are stored as .txt files. Each file contains information such as the number of products produced, the average waiting time of the workstations, and the utilization rate of the workstations. </p>"},{"location":"results/#example-results-file","title":"Example Results File","text":"<pre><code>Starting simulation [1 / 10] and running for time, t = 50000\nResults of Simulation for the Reverse Priority Policy:\nInspector 1 Avg. Inspection time (C1): 10.575921476912242 +/- 19.773488343937714\nInspector 2 Avg. Inspection time (C2): 15.835667543288643 +/- 31.094128215868412\nInspector 2 Avg. Inspection time (C3): 21.34088124702354 +/- 42.678475201986686\nInspector 1 Avg. Blocked time (C1): 10.575921476912242 +/- 19.773488343937714\nInspector 2 Avg. Blocked time (C2): 15.835667543288643 +/- 31.094128215868412\nInspector 2 Avg. Blocked time (C3): 21.34088124702354 +/- 42.678475201986686\nWorkstation 1 Avg. Process time: 4.748336194888908 +/- 9.049655785423548\nWorkstation 2 Avg. Process time: 10.768314794798476 +/- 20.884083311157\nWorkstation 3 Avg. Process time: 8.983340218115243 +/- 16.91454863433984\nWorkstation 1 Avg. Idle time: 25.99831098712895 +/- 101.4478864559243\nWorkstation 2 Avg. Idle time: 28.37159739712838 +/- 81.18074177245032\nWorkstation 3 Avg. Idle time: 27.432906626100785 +/- 65.04508602887152\nTotal P1 produced: 1625\nTotal P2 produced: 1277\nTotal P3 produced: 1373\nAvg. Buffer Occupancy Using Little's Law For W1: 0.8449451070816909\nAvg. Buffer Occupancy Using Little's Law For W2: 0.7246105975226588\nAvg. Buffer Occupancy Using Little's Law For W3: 0.7533076159527275\n</code></pre>"},{"location":"results/#input-data-folder","title":"Input Data Folder","text":"<p>The input data for the folder including average inspection times for each inspector with their respective components and workstation processing times can be found in the data folder.</p>"},{"location":"results/#policy-comparison-folder","title":"Policy Comparison Folder","text":"<p>A comparison of each of the operating policies simulated at a time, t = 50000 units of time can be found here.</p>"},{"location":"results/#result-folders","title":"Result Folders","text":"<ul> <li>Original Policy</li> <li>Random Policy - Equal Probability for C1</li> <li>Random Policy - Less Probability W1</li> <li>Random Policy - More Probability W1</li> <li>Reverse Priority</li> </ul> <p>The results folder contains sample runs of each operating policy at a time, t = 50000 units of time using the alternate simulator. Each operating policy will have 10 output files showcasing the output for each run.</p>"},{"location":"setup/","title":"Prerequistes and Setup","text":""},{"location":"setup/#prerequisites-and-setup-of-the-project","title":"Prerequisites and Setup of the Project","text":""},{"location":"setup/#prerequisites","title":"\ud83d\udcdd Prerequisites","text":"<ul> <li>Python</li> <li>NumPy</li> <li>SciPy</li> <li>SimPy</li> </ul>"},{"location":"setup/#setup","title":"\u2699\ufe0f Setup","text":"<ol> <li>Clone this repository to your local machine.</li> </ol> <pre><code>git clone https://github.com/vikiru/discrete-sim.git\ncd discrete-sim\n</code></pre> <ol> <li>Install all required Python dependencies.</li> </ol> <pre><code>pip install -U -r requirements.txt\n</code></pre>"},{"location":"usage/","title":"Running the Simulator","text":""},{"location":"usage/#running-the-simulator","title":"\ud83d\ude80 Running the Simulator","text":"<p> This repository contains two simulators that model the behavior of a manufacturing facility under different operating policies. The original simulator implements the current policy that the facility follows, while the alternate simulator tests the current policy against the alternative policies that I have devised based on various criteria. </p> <p> The original simulator runs for a fixed time period of t = 10000 units while the alternate simulator runs for a fixed time period of t = 50000 units. Every unique operating policy is repeated 10 times to obtain statistical estimates of the system performance in both simulators. </p> <p>The original simulator can be started as follows:</p> <pre><code>python simulator.py\n</code></pre> <p>The alternate simulator can be started as follows:</p> <pre><code>python alternate_simulator.py\n</code></pre>"},{"location":"usage/#alternate-simulator","title":"\ud83d\udd04 Alternate Simulator","text":"<p> The alternate simulator makes use of the simulator to run the original operating policy followed by the four alternative policies in succession. </p> <p> The difference is that the simulation time is changed to t = 50000 from t = 10000 and each operating policy is run 10 times. The results of these simulations are stored within the results folder with sub-folders separating the results of each simulation run for each policy. </p>"}]}